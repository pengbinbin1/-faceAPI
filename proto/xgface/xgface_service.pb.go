// Code generated by protoc-gen-go. DO NOT EDIT.
// source: xgface_service.proto

package xgface

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Images struct {
	Image1               string   `protobuf:"bytes,1,opt,name=image1,proto3" json:"image1,omitempty"`
	Image2               string   `protobuf:"bytes,2,opt,name=image2,proto3" json:"image2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Images) Reset()         { *m = Images{} }
func (m *Images) String() string { return proto.CompactTextString(m) }
func (*Images) ProtoMessage()    {}
func (*Images) Descriptor() ([]byte, []int) {
	return fileDescriptor_8beb2ad2d1a13152, []int{0}
}

func (m *Images) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Images.Unmarshal(m, b)
}
func (m *Images) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Images.Marshal(b, m, deterministic)
}
func (m *Images) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Images.Merge(m, src)
}
func (m *Images) XXX_Size() int {
	return xxx_messageInfo_Images.Size(m)
}
func (m *Images) XXX_DiscardUnknown() {
	xxx_messageInfo_Images.DiscardUnknown(m)
}

var xxx_messageInfo_Images proto.InternalMessageInfo

func (m *Images) GetImage1() string {
	if m != nil {
		return m.Image1
	}
	return ""
}

func (m *Images) GetImage2() string {
	if m != nil {
		return m.Image2
	}
	return ""
}

type Score struct {
	Score                float32  `protobuf:"fixed32,1,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Score) Reset()         { *m = Score{} }
func (m *Score) String() string { return proto.CompactTextString(m) }
func (*Score) ProtoMessage()    {}
func (*Score) Descriptor() ([]byte, []int) {
	return fileDescriptor_8beb2ad2d1a13152, []int{1}
}

func (m *Score) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Score.Unmarshal(m, b)
}
func (m *Score) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Score.Marshal(b, m, deterministic)
}
func (m *Score) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Score.Merge(m, src)
}
func (m *Score) XXX_Size() int {
	return xxx_messageInfo_Score.Size(m)
}
func (m *Score) XXX_DiscardUnknown() {
	xxx_messageInfo_Score.DiscardUnknown(m)
}

var xxx_messageInfo_Score proto.InternalMessageInfo

func (m *Score) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type FaceField struct {
	Landmark             int32    `protobuf:"varint,1,opt,name=landmark,proto3" json:"landmark,omitempty"`
	Attributes           int32    `protobuf:"varint,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
	Quality              int32    `protobuf:"varint,3,opt,name=quality,proto3" json:"quality,omitempty"`
	Feature              int32    `protobuf:"varint,4,opt,name=feature,proto3" json:"feature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FaceField) Reset()         { *m = FaceField{} }
func (m *FaceField) String() string { return proto.CompactTextString(m) }
func (*FaceField) ProtoMessage()    {}
func (*FaceField) Descriptor() ([]byte, []int) {
	return fileDescriptor_8beb2ad2d1a13152, []int{2}
}

func (m *FaceField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaceField.Unmarshal(m, b)
}
func (m *FaceField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaceField.Marshal(b, m, deterministic)
}
func (m *FaceField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaceField.Merge(m, src)
}
func (m *FaceField) XXX_Size() int {
	return xxx_messageInfo_FaceField.Size(m)
}
func (m *FaceField) XXX_DiscardUnknown() {
	xxx_messageInfo_FaceField.DiscardUnknown(m)
}

var xxx_messageInfo_FaceField proto.InternalMessageInfo

func (m *FaceField) GetLandmark() int32 {
	if m != nil {
		return m.Landmark
	}
	return 0
}

func (m *FaceField) GetAttributes() int32 {
	if m != nil {
		return m.Attributes
	}
	return 0
}

func (m *FaceField) GetQuality() int32 {
	if m != nil {
		return m.Quality
	}
	return 0
}

func (m *FaceField) GetFeature() int32 {
	if m != nil {
		return m.Feature
	}
	return 0
}

type Request struct {
	Facefield            *FaceField `protobuf:"bytes,1,opt,name=facefield,proto3" json:"facefield,omitempty"`
	Images               []string   `protobuf:"bytes,2,rep,name=images,proto3" json:"images,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_8beb2ad2d1a13152, []int{3}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetFacefield() *FaceField {
	if m != nil {
		return m.Facefield
	}
	return nil
}

func (m *Request) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

type Point struct {
	CoordinateX          float32  `protobuf:"fixed32,1,opt,name=coordinate_x,json=coordinateX,proto3" json:"coordinate_x,omitempty"`
	CoordinateY          float32  `protobuf:"fixed32,2,opt,name=coordinate_y,json=coordinateY,proto3" json:"coordinate_y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_8beb2ad2d1a13152, []int{4}
}

func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (m *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(m, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetCoordinateX() float32 {
	if m != nil {
		return m.CoordinateX
	}
	return 0
}

func (m *Point) GetCoordinateY() float32 {
	if m != nil {
		return m.CoordinateY
	}
	return 0
}

type Rect struct {
	Width                float32  `protobuf:"fixed32,1,opt,name=width,proto3" json:"width,omitempty"`
	Height               float32  `protobuf:"fixed32,2,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rect) Reset()         { *m = Rect{} }
func (m *Rect) String() string { return proto.CompactTextString(m) }
func (*Rect) ProtoMessage()    {}
func (*Rect) Descriptor() ([]byte, []int) {
	return fileDescriptor_8beb2ad2d1a13152, []int{5}
}

func (m *Rect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rect.Unmarshal(m, b)
}
func (m *Rect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rect.Marshal(b, m, deterministic)
}
func (m *Rect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rect.Merge(m, src)
}
func (m *Rect) XXX_Size() int {
	return xxx_messageInfo_Rect.Size(m)
}
func (m *Rect) XXX_DiscardUnknown() {
	xxx_messageInfo_Rect.DiscardUnknown(m)
}

var xxx_messageInfo_Rect proto.InternalMessageInfo

func (m *Rect) GetWidth() float32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Rect) GetHeight() float32 {
	if m != nil {
		return m.Height
	}
	return 0
}

type Feature struct {
	Values               []float32 `protobuf:"fixed32,1,rep,packed,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Feature) Reset()         { *m = Feature{} }
func (m *Feature) String() string { return proto.CompactTextString(m) }
func (*Feature) ProtoMessage()    {}
func (*Feature) Descriptor() ([]byte, []int) {
	return fileDescriptor_8beb2ad2d1a13152, []int{6}
}

func (m *Feature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Feature.Unmarshal(m, b)
}
func (m *Feature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Feature.Marshal(b, m, deterministic)
}
func (m *Feature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Feature.Merge(m, src)
}
func (m *Feature) XXX_Size() int {
	return xxx_messageInfo_Feature.Size(m)
}
func (m *Feature) XXX_DiscardUnknown() {
	xxx_messageInfo_Feature.DiscardUnknown(m)
}

var xxx_messageInfo_Feature proto.InternalMessageInfo

func (m *Feature) GetValues() []float32 {
	if m != nil {
		return m.Values
	}
	return nil
}

type Features struct {
	Features             []*Feature `protobuf:"bytes,1,rep,name=features,proto3" json:"features,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Features) Reset()         { *m = Features{} }
func (m *Features) String() string { return proto.CompactTextString(m) }
func (*Features) ProtoMessage()    {}
func (*Features) Descriptor() ([]byte, []int) {
	return fileDescriptor_8beb2ad2d1a13152, []int{7}
}

func (m *Features) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Features.Unmarshal(m, b)
}
func (m *Features) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Features.Marshal(b, m, deterministic)
}
func (m *Features) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Features.Merge(m, src)
}
func (m *Features) XXX_Size() int {
	return xxx_messageInfo_Features.Size(m)
}
func (m *Features) XXX_DiscardUnknown() {
	xxx_messageInfo_Features.DiscardUnknown(m)
}

var xxx_messageInfo_Features proto.InternalMessageInfo

func (m *Features) GetFeatures() []*Feature {
	if m != nil {
		return m.Features
	}
	return nil
}

type Box struct {
	Center               *Point   `protobuf:"bytes,1,opt,name=center,proto3" json:"center,omitempty"`
	Rect                 *Rect    `protobuf:"bytes,2,opt,name=rect,proto3" json:"rect,omitempty"`
	Score                float32  `protobuf:"fixed32,3,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Box) Reset()         { *m = Box{} }
func (m *Box) String() string { return proto.CompactTextString(m) }
func (*Box) ProtoMessage()    {}
func (*Box) Descriptor() ([]byte, []int) {
	return fileDescriptor_8beb2ad2d1a13152, []int{8}
}

func (m *Box) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Box.Unmarshal(m, b)
}
func (m *Box) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Box.Marshal(b, m, deterministic)
}
func (m *Box) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Box.Merge(m, src)
}
func (m *Box) XXX_Size() int {
	return xxx_messageInfo_Box.Size(m)
}
func (m *Box) XXX_DiscardUnknown() {
	xxx_messageInfo_Box.DiscardUnknown(m)
}

var xxx_messageInfo_Box proto.InternalMessageInfo

func (m *Box) GetCenter() *Point {
	if m != nil {
		return m.Center
	}
	return nil
}

func (m *Box) GetRect() *Rect {
	if m != nil {
		return m.Rect
	}
	return nil
}

func (m *Box) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type Boxs struct {
	Boxs                 []*Box   `protobuf:"bytes,1,rep,name=boxs,proto3" json:"boxs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Boxs) Reset()         { *m = Boxs{} }
func (m *Boxs) String() string { return proto.CompactTextString(m) }
func (*Boxs) ProtoMessage()    {}
func (*Boxs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8beb2ad2d1a13152, []int{9}
}

func (m *Boxs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Boxs.Unmarshal(m, b)
}
func (m *Boxs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Boxs.Marshal(b, m, deterministic)
}
func (m *Boxs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Boxs.Merge(m, src)
}
func (m *Boxs) XXX_Size() int {
	return xxx_messageInfo_Boxs.Size(m)
}
func (m *Boxs) XXX_DiscardUnknown() {
	xxx_messageInfo_Boxs.DiscardUnknown(m)
}

var xxx_messageInfo_Boxs proto.InternalMessageInfo

func (m *Boxs) GetBoxs() []*Box {
	if m != nil {
		return m.Boxs
	}
	return nil
}

type Landmark struct {
	Points               []*Point `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	Score                float32  `protobuf:"fixed32,2,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Landmark) Reset()         { *m = Landmark{} }
func (m *Landmark) String() string { return proto.CompactTextString(m) }
func (*Landmark) ProtoMessage()    {}
func (*Landmark) Descriptor() ([]byte, []int) {
	return fileDescriptor_8beb2ad2d1a13152, []int{10}
}

func (m *Landmark) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Landmark.Unmarshal(m, b)
}
func (m *Landmark) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Landmark.Marshal(b, m, deterministic)
}
func (m *Landmark) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Landmark.Merge(m, src)
}
func (m *Landmark) XXX_Size() int {
	return xxx_messageInfo_Landmark.Size(m)
}
func (m *Landmark) XXX_DiscardUnknown() {
	xxx_messageInfo_Landmark.DiscardUnknown(m)
}

var xxx_messageInfo_Landmark proto.InternalMessageInfo

func (m *Landmark) GetPoints() []*Point {
	if m != nil {
		return m.Points
	}
	return nil
}

func (m *Landmark) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type Landmarks struct {
	Landmarks            []*Landmark `protobuf:"bytes,1,rep,name=landmarks,proto3" json:"landmarks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Landmarks) Reset()         { *m = Landmarks{} }
func (m *Landmarks) String() string { return proto.CompactTextString(m) }
func (*Landmarks) ProtoMessage()    {}
func (*Landmarks) Descriptor() ([]byte, []int) {
	return fileDescriptor_8beb2ad2d1a13152, []int{11}
}

func (m *Landmarks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Landmarks.Unmarshal(m, b)
}
func (m *Landmarks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Landmarks.Marshal(b, m, deterministic)
}
func (m *Landmarks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Landmarks.Merge(m, src)
}
func (m *Landmarks) XXX_Size() int {
	return xxx_messageInfo_Landmarks.Size(m)
}
func (m *Landmarks) XXX_DiscardUnknown() {
	xxx_messageInfo_Landmarks.DiscardUnknown(m)
}

var xxx_messageInfo_Landmarks proto.InternalMessageInfo

func (m *Landmarks) GetLandmarks() []*Landmark {
	if m != nil {
		return m.Landmarks
	}
	return nil
}

type Body struct {
	Box                  *Box     `protobuf:"bytes,1,opt,name=box,proto3" json:"box,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Body) Reset()         { *m = Body{} }
func (m *Body) String() string { return proto.CompactTextString(m) }
func (*Body) ProtoMessage()    {}
func (*Body) Descriptor() ([]byte, []int) {
	return fileDescriptor_8beb2ad2d1a13152, []int{12}
}

func (m *Body) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Body.Unmarshal(m, b)
}
func (m *Body) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Body.Marshal(b, m, deterministic)
}
func (m *Body) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Body.Merge(m, src)
}
func (m *Body) XXX_Size() int {
	return xxx_messageInfo_Body.Size(m)
}
func (m *Body) XXX_DiscardUnknown() {
	xxx_messageInfo_Body.DiscardUnknown(m)
}

var xxx_messageInfo_Body proto.InternalMessageInfo

func (m *Body) GetBox() *Box {
	if m != nil {
		return m.Box
	}
	return nil
}

type BodyInfo struct {
	Bodys                []*Body  `protobuf:"bytes,1,rep,name=bodys,proto3" json:"bodys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BodyInfo) Reset()         { *m = BodyInfo{} }
func (m *BodyInfo) String() string { return proto.CompactTextString(m) }
func (*BodyInfo) ProtoMessage()    {}
func (*BodyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8beb2ad2d1a13152, []int{13}
}

func (m *BodyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BodyInfo.Unmarshal(m, b)
}
func (m *BodyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BodyInfo.Marshal(b, m, deterministic)
}
func (m *BodyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BodyInfo.Merge(m, src)
}
func (m *BodyInfo) XXX_Size() int {
	return xxx_messageInfo_BodyInfo.Size(m)
}
func (m *BodyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BodyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BodyInfo proto.InternalMessageInfo

func (m *BodyInfo) GetBodys() []*Body {
	if m != nil {
		return m.Bodys
	}
	return nil
}

type Face struct {
	Box                  *Box             `protobuf:"bytes,1,opt,name=box,proto3" json:"box,omitempty"`
	Landmark             *Landmark        `protobuf:"bytes,2,opt,name=landmark,proto3" json:"landmark,omitempty"`
	Feature              *Feature         `protobuf:"bytes,3,opt,name=feature,proto3" json:"feature,omitempty"`
	Attributes           map[string]int32 `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Pitch                float32          `protobuf:"fixed32,5,opt,name=pitch,proto3" json:"pitch,omitempty"`
	Yaw                  float32          `protobuf:"fixed32,6,opt,name=yaw,proto3" json:"yaw,omitempty"`
	Roll                 float32          `protobuf:"fixed32,7,opt,name=roll,proto3" json:"roll,omitempty"`
	GlobalIsFace         float32          `protobuf:"fixed32,8,opt,name=global_is_face,json=globalIsFace,proto3" json:"global_is_face,omitempty"`
	GlobalFrontFace      float32          `protobuf:"fixed32,9,opt,name=global_front_face,json=globalFrontFace,proto3" json:"global_front_face,omitempty"`
	LocalIsFace          float32          `protobuf:"fixed32,10,opt,name=local_is_face,json=localIsFace,proto3" json:"local_is_face,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Face) Reset()         { *m = Face{} }
func (m *Face) String() string { return proto.CompactTextString(m) }
func (*Face) ProtoMessage()    {}
func (*Face) Descriptor() ([]byte, []int) {
	return fileDescriptor_8beb2ad2d1a13152, []int{14}
}

func (m *Face) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Face.Unmarshal(m, b)
}
func (m *Face) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Face.Marshal(b, m, deterministic)
}
func (m *Face) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Face.Merge(m, src)
}
func (m *Face) XXX_Size() int {
	return xxx_messageInfo_Face.Size(m)
}
func (m *Face) XXX_DiscardUnknown() {
	xxx_messageInfo_Face.DiscardUnknown(m)
}

var xxx_messageInfo_Face proto.InternalMessageInfo

func (m *Face) GetBox() *Box {
	if m != nil {
		return m.Box
	}
	return nil
}

func (m *Face) GetLandmark() *Landmark {
	if m != nil {
		return m.Landmark
	}
	return nil
}

func (m *Face) GetFeature() *Feature {
	if m != nil {
		return m.Feature
	}
	return nil
}

func (m *Face) GetAttributes() map[string]int32 {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Face) GetPitch() float32 {
	if m != nil {
		return m.Pitch
	}
	return 0
}

func (m *Face) GetYaw() float32 {
	if m != nil {
		return m.Yaw
	}
	return 0
}

func (m *Face) GetRoll() float32 {
	if m != nil {
		return m.Roll
	}
	return 0
}

func (m *Face) GetGlobalIsFace() float32 {
	if m != nil {
		return m.GlobalIsFace
	}
	return 0
}

func (m *Face) GetGlobalFrontFace() float32 {
	if m != nil {
		return m.GlobalFrontFace
	}
	return 0
}

func (m *Face) GetLocalIsFace() float32 {
	if m != nil {
		return m.LocalIsFace
	}
	return 0
}

type DetectInfo struct {
	Faces                []*Face  `protobuf:"bytes,1,rep,name=faces,proto3" json:"faces,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetectInfo) Reset()         { *m = DetectInfo{} }
func (m *DetectInfo) String() string { return proto.CompactTextString(m) }
func (*DetectInfo) ProtoMessage()    {}
func (*DetectInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8beb2ad2d1a13152, []int{15}
}

func (m *DetectInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectInfo.Unmarshal(m, b)
}
func (m *DetectInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectInfo.Marshal(b, m, deterministic)
}
func (m *DetectInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectInfo.Merge(m, src)
}
func (m *DetectInfo) XXX_Size() int {
	return xxx_messageInfo_DetectInfo.Size(m)
}
func (m *DetectInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DetectInfo proto.InternalMessageInfo

func (m *DetectInfo) GetFaces() []*Face {
	if m != nil {
		return m.Faces
	}
	return nil
}

type DetectInfos struct {
	Detectinfos          []*DetectInfo `protobuf:"bytes,1,rep,name=detectinfos,proto3" json:"detectinfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DetectInfos) Reset()         { *m = DetectInfos{} }
func (m *DetectInfos) String() string { return proto.CompactTextString(m) }
func (*DetectInfos) ProtoMessage()    {}
func (*DetectInfos) Descriptor() ([]byte, []int) {
	return fileDescriptor_8beb2ad2d1a13152, []int{16}
}

func (m *DetectInfos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectInfos.Unmarshal(m, b)
}
func (m *DetectInfos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectInfos.Marshal(b, m, deterministic)
}
func (m *DetectInfos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectInfos.Merge(m, src)
}
func (m *DetectInfos) XXX_Size() int {
	return xxx_messageInfo_DetectInfos.Size(m)
}
func (m *DetectInfos) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectInfos.DiscardUnknown(m)
}

var xxx_messageInfo_DetectInfos proto.InternalMessageInfo

func (m *DetectInfos) GetDetectinfos() []*DetectInfo {
	if m != nil {
		return m.Detectinfos
	}
	return nil
}

func init() {
	proto.RegisterType((*Images)(nil), "xgface.Images")
	proto.RegisterType((*Score)(nil), "xgface.Score")
	proto.RegisterType((*FaceField)(nil), "xgface.FaceField")
	proto.RegisterType((*Request)(nil), "xgface.Request")
	proto.RegisterType((*Point)(nil), "xgface.Point")
	proto.RegisterType((*Rect)(nil), "xgface.Rect")
	proto.RegisterType((*Feature)(nil), "xgface.Feature")
	proto.RegisterType((*Features)(nil), "xgface.Features")
	proto.RegisterType((*Box)(nil), "xgface.Box")
	proto.RegisterType((*Boxs)(nil), "xgface.Boxs")
	proto.RegisterType((*Landmark)(nil), "xgface.Landmark")
	proto.RegisterType((*Landmarks)(nil), "xgface.Landmarks")
	proto.RegisterType((*Body)(nil), "xgface.Body")
	proto.RegisterType((*BodyInfo)(nil), "xgface.BodyInfo")
	proto.RegisterType((*Face)(nil), "xgface.Face")
	proto.RegisterMapType((map[string]int32)(nil), "xgface.Face.AttributesEntry")
	proto.RegisterType((*DetectInfo)(nil), "xgface.DetectInfo")
	proto.RegisterType((*DetectInfos)(nil), "xgface.DetectInfos")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// XgfaceServiceClient is the client API for XgfaceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type XgfaceServiceClient interface {
	// xgface RPC service
	//
	GetFeature(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Features, error)
	GetBox(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Boxs, error)
	GetLandmark(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Landmarks, error)
	GetBodyInfo(ctx context.Context, in *Request, opts ...grpc.CallOption) (*BodyInfo, error)
	GetDetectInfo(ctx context.Context, in *Request, opts ...grpc.CallOption) (*DetectInfo, error)
	GetDetectInfoMutliImages(ctx context.Context, in *Request, opts ...grpc.CallOption) (*DetectInfos, error)
	MatchFaces(ctx context.Context, in *Images, opts ...grpc.CallOption) (*Score, error)
}

type xgfaceServiceClient struct {
	cc *grpc.ClientConn
}

func NewXgfaceServiceClient(cc *grpc.ClientConn) XgfaceServiceClient {
	return &xgfaceServiceClient{cc}
}

func (c *xgfaceServiceClient) GetFeature(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Features, error) {
	out := new(Features)
	err := c.cc.Invoke(ctx, "/xgface.XgfaceService/GetFeature", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xgfaceServiceClient) GetBox(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Boxs, error) {
	out := new(Boxs)
	err := c.cc.Invoke(ctx, "/xgface.XgfaceService/GetBox", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xgfaceServiceClient) GetLandmark(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Landmarks, error) {
	out := new(Landmarks)
	err := c.cc.Invoke(ctx, "/xgface.XgfaceService/GetLandmark", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xgfaceServiceClient) GetBodyInfo(ctx context.Context, in *Request, opts ...grpc.CallOption) (*BodyInfo, error) {
	out := new(BodyInfo)
	err := c.cc.Invoke(ctx, "/xgface.XgfaceService/GetBodyInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xgfaceServiceClient) GetDetectInfo(ctx context.Context, in *Request, opts ...grpc.CallOption) (*DetectInfo, error) {
	out := new(DetectInfo)
	err := c.cc.Invoke(ctx, "/xgface.XgfaceService/GetDetectInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xgfaceServiceClient) GetDetectInfoMutliImages(ctx context.Context, in *Request, opts ...grpc.CallOption) (*DetectInfos, error) {
	out := new(DetectInfos)
	err := c.cc.Invoke(ctx, "/xgface.XgfaceService/GetDetectInfo_mutli_images", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xgfaceServiceClient) MatchFaces(ctx context.Context, in *Images, opts ...grpc.CallOption) (*Score, error) {
	out := new(Score)
	err := c.cc.Invoke(ctx, "/xgface.XgfaceService/MatchFaces", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// XgfaceServiceServer is the server API for XgfaceService service.
type XgfaceServiceServer interface {
	// xgface RPC service
	//
	GetFeature(context.Context, *Request) (*Features, error)
	GetBox(context.Context, *Request) (*Boxs, error)
	GetLandmark(context.Context, *Request) (*Landmarks, error)
	GetBodyInfo(context.Context, *Request) (*BodyInfo, error)
	GetDetectInfo(context.Context, *Request) (*DetectInfo, error)
	GetDetectInfoMutliImages(context.Context, *Request) (*DetectInfos, error)
	MatchFaces(context.Context, *Images) (*Score, error)
}

func RegisterXgfaceServiceServer(s *grpc.Server, srv XgfaceServiceServer) {
	s.RegisterService(&_XgfaceService_serviceDesc, srv)
}

func _XgfaceService_GetFeature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XgfaceServiceServer).GetFeature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xgface.XgfaceService/GetFeature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XgfaceServiceServer).GetFeature(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _XgfaceService_GetBox_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XgfaceServiceServer).GetBox(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xgface.XgfaceService/GetBox",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XgfaceServiceServer).GetBox(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _XgfaceService_GetLandmark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XgfaceServiceServer).GetLandmark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xgface.XgfaceService/GetLandmark",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XgfaceServiceServer).GetLandmark(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _XgfaceService_GetBodyInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XgfaceServiceServer).GetBodyInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xgface.XgfaceService/GetBodyInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XgfaceServiceServer).GetBodyInfo(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _XgfaceService_GetDetectInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XgfaceServiceServer).GetDetectInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xgface.XgfaceService/GetDetectInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XgfaceServiceServer).GetDetectInfo(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _XgfaceService_GetDetectInfoMutliImages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XgfaceServiceServer).GetDetectInfoMutliImages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xgface.XgfaceService/GetDetectInfoMutliImages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XgfaceServiceServer).GetDetectInfoMutliImages(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _XgfaceService_MatchFaces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Images)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XgfaceServiceServer).MatchFaces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xgface.XgfaceService/MatchFaces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XgfaceServiceServer).MatchFaces(ctx, req.(*Images))
	}
	return interceptor(ctx, in, info, handler)
}

var _XgfaceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "xgface.XgfaceService",
	HandlerType: (*XgfaceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFeature",
			Handler:    _XgfaceService_GetFeature_Handler,
		},
		{
			MethodName: "GetBox",
			Handler:    _XgfaceService_GetBox_Handler,
		},
		{
			MethodName: "GetLandmark",
			Handler:    _XgfaceService_GetLandmark_Handler,
		},
		{
			MethodName: "GetBodyInfo",
			Handler:    _XgfaceService_GetBodyInfo_Handler,
		},
		{
			MethodName: "GetDetectInfo",
			Handler:    _XgfaceService_GetDetectInfo_Handler,
		},
		{
			MethodName: "GetDetectInfo_mutli_images",
			Handler:    _XgfaceService_GetDetectInfoMutliImages_Handler,
		},
		{
			MethodName: "MatchFaces",
			Handler:    _XgfaceService_MatchFaces_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "xgface_service.proto",
}

func init() { proto.RegisterFile("xgface_service.proto", fileDescriptor_8beb2ad2d1a13152) }

var fileDescriptor_8beb2ad2d1a13152 = []byte{
	// 848 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x55, 0x5f, 0x8f, 0xdb, 0x44,
	0x10, 0x4f, 0xe2, 0x3f, 0x49, 0xc6, 0x49, 0x73, 0xb7, 0x1c, 0xc8, 0x8a, 0x28, 0x5c, 0x57, 0x9c,
	0xa0, 0x50, 0x02, 0x4d, 0x2b, 0xa8, 0xf8, 0xf3, 0x40, 0x28, 0x89, 0x4e, 0xa2, 0xd2, 0x69, 0xfb,
	0x72, 0x3c, 0x45, 0x8e, 0xbd, 0x49, 0xac, 0x3a, 0xd9, 0xab, 0x77, 0xd3, 0xb3, 0xc5, 0x23, 0xdf,
	0x84, 0x77, 0xbe, 0x23, 0xda, 0x5d, 0xaf, 0xed, 0xc4, 0xa0, 0xbe, 0xed, 0xcc, 0xfc, 0x66, 0xe6,
	0x37, 0xb3, 0x33, 0xbb, 0x70, 0x91, 0x6d, 0xd6, 0x41, 0x48, 0x97, 0x9c, 0xa6, 0xef, 0xe2, 0x90,
	0x4e, 0xee, 0x52, 0x26, 0x18, 0x72, 0xb5, 0x16, 0xbf, 0x00, 0xf7, 0x7a, 0x17, 0x6c, 0x28, 0x47,
	0x1f, 0x81, 0x1b, 0xcb, 0xd3, 0x53, 0xbf, 0x7d, 0xd9, 0xfe, 0xa2, 0x4f, 0x0a, 0xa9, 0xd4, 0x4f,
	0xfd, 0x4e, 0x4d, 0x3f, 0xc5, 0x0f, 0xc1, 0x79, 0x1d, 0xb2, 0x94, 0xa2, 0x0b, 0x70, 0xb8, 0x3c,
	0x28, 0xbf, 0x0e, 0xd1, 0x02, 0xfe, 0x13, 0xfa, 0xf3, 0x20, 0xa4, 0xf3, 0x98, 0x26, 0x11, 0x1a,
	0x43, 0x2f, 0x09, 0xf6, 0xd1, 0x2e, 0x48, 0xdf, 0x28, 0x94, 0x43, 0x4a, 0x19, 0x7d, 0x02, 0x10,
	0x08, 0x91, 0xc6, 0xab, 0x83, 0xa0, 0x5c, 0xe5, 0x70, 0x48, 0x4d, 0x83, 0x7c, 0xe8, 0xbe, 0x3d,
	0x04, 0x49, 0x2c, 0x72, 0xdf, 0x52, 0x46, 0x23, 0x4a, 0xcb, 0x9a, 0x06, 0xe2, 0x90, 0x52, 0xdf,
	0xd6, 0x96, 0x42, 0xc4, 0x04, 0xba, 0x84, 0xbe, 0x3d, 0x50, 0x2e, 0xd0, 0x37, 0xd0, 0x97, 0x85,
	0xae, 0x25, 0x0f, 0x95, 0xdb, 0x9b, 0x9e, 0x4f, 0x74, 0xf1, 0x93, 0x92, 0x20, 0xa9, 0x30, 0x65,
	0xbd, 0x92, 0x8b, 0x55, 0xd6, 0xcb, 0xf1, 0x2b, 0x70, 0x6e, 0x58, 0xbc, 0x17, 0xe8, 0x11, 0x0c,
	0x42, 0xc6, 0xd2, 0x28, 0xde, 0x07, 0x82, 0x2e, 0xb3, 0xa2, 0x6c, 0xaf, 0xd2, 0xdd, 0x9e, 0x40,
	0x72, 0x55, 0xd5, 0x11, 0xe4, 0x0f, 0xfc, 0x1c, 0x6c, 0x42, 0x43, 0x21, 0xbb, 0x77, 0x1f, 0x47,
	0x62, 0x6b, 0xba, 0xa7, 0x04, 0x49, 0x62, 0x4b, 0xe3, 0xcd, 0x56, 0x14, 0xae, 0x85, 0x84, 0x1f,
	0x41, 0x77, 0xae, 0x6b, 0x94, 0x90, 0x77, 0x41, 0x72, 0xa0, 0xdc, 0x6f, 0x5f, 0x5a, 0x12, 0xa2,
	0x25, 0xfc, 0x3d, 0xf4, 0x0a, 0x08, 0x47, 0x5f, 0x41, 0xaf, 0x68, 0x89, 0x46, 0x79, 0xd3, 0x51,
	0x59, 0xbb, 0xd6, 0x93, 0x12, 0x80, 0x23, 0xb0, 0x66, 0x2c, 0x43, 0x57, 0xe0, 0x86, 0x74, 0x2f,
	0x68, 0x5a, 0x74, 0x6b, 0x68, 0x3c, 0x54, 0xf5, 0xa4, 0x30, 0xa2, 0x4b, 0xb0, 0x53, 0x1a, 0x6a,
	0x7e, 0xde, 0x74, 0x60, 0x40, 0xb2, 0x26, 0xa2, 0x2c, 0xd5, 0x5c, 0x58, 0xf5, 0xb9, 0xf8, 0x1c,
	0xec, 0x19, 0xcb, 0x38, 0xfa, 0x14, 0xec, 0x15, 0xcb, 0x0c, 0x2d, 0xcf, 0xf8, 0xcf, 0x58, 0x46,
	0x94, 0x01, 0x2f, 0xa0, 0xf7, 0xbb, 0x99, 0x91, 0x2b, 0x70, 0xef, 0x64, 0x76, 0x03, 0x3f, 0xe5,
	0xa4, 0x8d, 0x55, 0xc6, 0x4e, 0x3d, 0xe3, 0x8f, 0xd0, 0x37, 0x81, 0x38, 0x9a, 0x40, 0xdf, 0x4c,
	0x9e, 0x09, 0x76, 0x66, 0x82, 0x19, 0x14, 0xa9, 0x20, 0xf8, 0x4a, 0xd2, 0x8d, 0x72, 0xf4, 0x10,
	0xac, 0x15, 0xcb, 0x8a, 0x96, 0x1c, 0xb1, 0x95, 0x7a, 0x3c, 0x81, 0x9e, 0x84, 0x5d, 0xef, 0xd7,
	0x0c, 0x61, 0x70, 0x56, 0x2c, 0xca, 0x4d, 0xf8, 0x41, 0x05, 0x8e, 0x72, 0xa2, 0x4d, 0xf8, 0x1f,
	0x0b, 0x6c, 0x39, 0x7d, 0xef, 0x89, 0x8b, 0x9e, 0xd4, 0x16, 0x47, 0x77, 0xba, 0xc9, 0xb6, 0x5a,
	0xa5, 0xc7, 0xd5, 0x42, 0x58, 0x0a, 0xdc, 0xb8, 0x6d, 0x63, 0x47, 0x3f, 0x1d, 0x6d, 0x9d, 0xad,
	0x98, 0x7e, 0x5c, 0xdf, 0x8b, 0xc9, 0x2f, 0xa5, 0xf9, 0xb7, 0xbd, 0x48, 0xf3, 0xa3, 0x9d, 0xbc,
	0x00, 0xe7, 0x2e, 0x16, 0xe1, 0xd6, 0x77, 0x74, 0xa3, 0x95, 0x80, 0xce, 0xc0, 0xca, 0x83, 0x7b,
	0xdf, 0x55, 0x3a, 0x79, 0x44, 0x08, 0xec, 0x94, 0x25, 0x89, 0xdf, 0x55, 0x2a, 0x75, 0x46, 0x9f,
	0xc1, 0x83, 0x4d, 0xc2, 0x56, 0x41, 0xb2, 0x8c, 0xf9, 0x52, 0xa6, 0xf3, 0x7b, 0xca, 0x3a, 0xd0,
	0xda, 0x6b, 0xae, 0xfa, 0xf2, 0x25, 0x9c, 0x17, 0xa8, 0x75, 0xca, 0xf6, 0x42, 0x03, 0xfb, 0x0a,
	0x38, 0xd2, 0x86, 0xb9, 0xd4, 0x2b, 0x2c, 0x86, 0x61, 0xc2, 0xc2, 0x5a, 0x40, 0xd0, 0xeb, 0xa6,
	0x94, 0x3a, 0xde, 0xf8, 0x67, 0x18, 0x9d, 0x14, 0x24, 0xe9, 0xbe, 0xa1, 0x79, 0xf1, 0xda, 0xc9,
	0xa3, 0x2c, 0x4b, 0x2d, 0x51, 0xf1, 0x0a, 0x69, 0xe1, 0x87, 0xce, 0x8b, 0x36, 0xfe, 0x16, 0xe0,
	0x25, 0x15, 0x34, 0x14, 0xe6, 0x86, 0x65, 0x9e, 0xc6, 0x0d, 0xcb, 0x4c, 0x44, 0x9b, 0xf0, 0xaf,
	0xe0, 0x55, 0x1e, 0x1c, 0x3d, 0x07, 0x2f, 0x52, 0x62, 0x2c, 0xc5, 0xc2, 0x11, 0x19, 0xc7, 0x0a,
	0x49, 0xea, 0xb0, 0xe9, 0x5f, 0x16, 0x0c, 0x6f, 0x15, 0xe4, 0xb5, 0x7e, 0xbd, 0xd1, 0x53, 0x80,
	0x05, 0x15, 0xe6, 0x0d, 0x18, 0x55, 0x6b, 0xa7, 0x5e, 0xbb, 0xf1, 0xd9, 0xc9, 0x85, 0x73, 0xdc,
	0x42, 0x8f, 0xc1, 0x5d, 0x50, 0x21, 0x57, 0xbb, 0x01, 0xaf, 0xcd, 0x66, 0x26, 0xa1, 0xcf, 0xc0,
	0x5b, 0x50, 0x51, 0xae, 0x5d, 0x03, 0x7f, 0x7e, 0x3a, 0x7c, 0xd2, 0x69, 0xaa, 0x9c, 0xca, 0xf1,
	0xff, 0x7f, 0x4e, 0x06, 0x82, 0x5b, 0xe8, 0x3b, 0x18, 0x2e, 0xa8, 0xa8, 0xb5, 0xb4, 0xe1, 0xf5,
	0x1f, 0xbd, 0xc1, 0x2d, 0xf4, 0x12, 0xc6, 0x47, 0x7e, 0xcb, 0xdd, 0x41, 0x24, 0xf1, 0x52, 0x3f,
	0xd1, 0xcd, 0x20, 0x1f, 0x34, 0x83, 0x48, 0xc6, 0x5f, 0x03, 0xbc, 0x0a, 0x44, 0xb8, 0x95, 0xf7,
	0xc5, 0xd1, 0x03, 0x03, 0xd2, 0x1f, 0xe1, 0xb8, 0x7c, 0x5c, 0xd4, 0xf7, 0x86, 0x5b, 0xb3, 0x27,
	0xf0, 0x61, 0xc8, 0x76, 0x93, 0x6c, 0x93, 0xb2, 0x15, 0x13, 0x71, 0xc8, 0x0b, 0xc0, 0xcc, 0xd3,
	0x77, 0x73, 0x23, 0x7f, 0xd4, 0x9b, 0xf6, 0xdf, 0x1d, 0xeb, 0x76, 0x31, 0x5f, 0xb9, 0xea, 0x83,
	0x7d, 0xf6, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x88, 0x12, 0x6d, 0x4c, 0x78, 0x07, 0x00, 0x00,
}
